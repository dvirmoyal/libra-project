services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grades-api
    ports:
      - "8080:8080"
    environment:
      - LIBRA_SERVER_PORT=8080
      - LIBRA_STATSD_HOST=statsd
      - LIBRA_STATSD_PORT=8125
      - LIBRA_STATSD_SERVICENAME=grades-service
      - LIBRA_DB_HOST=postgres
      - LIBRA_DB_PORT=5432
      - LIBRA_DB_USER=${POSTGRES_USER:-postgres}
      - LIBRA_DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - LIBRA_DB_DATABASE=${POSTGRES_DB:-gradesdb}
    volumes:
      - ./config:/config
    depends_on:
      postgres:
        condition: service_healthy
      statsd:
        condition: service_started
    networks:
      - grades-network
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    # Labels
    labels:
      app: "grades-service"
      component: "api"
      environment: "development"

  # PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    container_name: grades-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-gradesdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - grades-network
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 256M
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-gradesdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    # Labels
    labels:
      app: "grades-service"
      component: "database"
      environment: "development"

  # StatsD for metrics collection
  statsd:
    image: prom/statsd-exporter:latest
    container_name: grades-statsd
    ports:
      - "8125:8125/udp"  # StatsD input
      - "9102:9102"      # Prometheus metrics output
    networks:
      - grades-network
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M
    # Labels
    labels:
      app: "grades-service"
      component: "metrics"
      environment: "development"

# Named volumes with metadata
volumes:
  postgres_data:
    name: grades-postgres-data
    labels:
      app: "grades-service"
      component: "database"

# Custom network
networks:
  grades-network:
    name: grades-network
    driver: bridge
    labels:
      app: "grades-service"
      environment: "development"