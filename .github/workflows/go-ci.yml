name: GoApp-CI
on:
  push:
    branches: ["PROD"]
env:
  IMAGE_NAME: libra
  REGISTRY: ghcr.io
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout the source  code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...

      - name: Check Dockerfile Security
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: warning

      - name: Configure Git
        run: |
          git config --global user.email "dvirmoyal25@gmail.com"
          git config --global user.name "dvir_moyal"

      - name: Install Commitizen
        run: |
          pip install commitizen

      - name: Bump version and create changelog
        id: bump
        run: |
          cz bump --yes
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Debug VERSION
        run: echo "VERSION=${{ env.VERSION }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Scan Docker Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            **Docker Image:**
            - Name: `${{ env.IMAGE_NAME }}`
            - Tags:
              - `latest`
              - `${{ env.VERSION }}`
            
            **Security Scan Status:**
            - Code security scan completed
            - Dockerfile security scan completed
            - Container image scan completed
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}