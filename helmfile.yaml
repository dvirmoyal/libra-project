repositories:
  - name: stakater
    url: https://stakater.github.io/stakater-charts
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: hashicorp
    url: https://helm.releases.hashicorp.com
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: elastic
    url: https://helm.elastic.co

releases:
  # PostgreSQL Database
  - name: postgres
    namespace: dvir-api
    chart: bitnami/postgresql
    version: 12.1.5
    values:
      - auth:
          existingSecret: db-credentials
        primary:
          persistence:
            enabled: true
            size: 1Gi

  # Vault for secrets management
  - name: vault
    namespace: dvir-api
    chart: hashicorp/vault
    version: 0.25.0
    values:
      - server:
          ui: true
          ha:
            enabled: true
            replicas: 1
            raft:
              enabled: true
              setNodeId: true
              config: |
                cluster_name = "vault-integrated-storage"
                storage "raft" {
                  path = "/vault/data/"
                }
                listener "tcp" {
                  address         = "[::]:8200"
                  cluster_address = "[::]:8201"
                  tls_disable     = "true"
                }
                service_registration "kubernetes" {}
          disable_mlock: true
        injector:
          enabled: true

  # StatsD Exporter - converts DogStatsD metrics to Prometheus format
  - name: statsd
    namespace: dvir-api
    chart: prometheus-community/prometheus-statsd-exporter
    version: 0.7.0
    values:
      - serviceMonitor:
          # Enable ServiceMonitor for Prometheus Operator
          enabled: true
          additionalLabels:
            release: prometheus
        statsd:
          # Configure StatsD to Prometheus mappings
          mappingConfig:
            mappings:
              # API endpoint metrics
              - match: "get_grades_time"
                name: "grades_api_get_all_duration"
                timer_type: "histogram"
                help: "Duration of get all grades API requests"

              - match: "get_grades_id_time"
                name: "grades_api_get_by_id_duration"
                timer_type: "histogram"
                help: "Duration of get grade by ID API requests"

              - match: "post_grades_time"
                name: "grades_api_create_duration"
                timer_type: "histogram"
                help: "Duration of create grade API requests"

              - match: "put_grades_id_time"
                name: "grades_api_update_duration"
                timer_type: "histogram"
                help: "Duration of update grade API requests"

              - match: "delete_grades_id_time"
                name: "grades_api_delete_duration"
                timer_type: "histogram"
                help: "Duration of delete grade API requests"

              - match: "get_grades_avg_time"
                name: "grades_api_get_avg_duration"
                timer_type: "histogram"
                help: "Duration of get average grade API requests"

  # Prometheus - metrics collection and storage
  - name: prometheus
    namespace: dvir-api
    chart: prometheus-community/prometheus
    version: 25.8.0
    values:
      - server:
          # Keep metrics for 15 days
          retention: 15d
          persistentVolume:
            enabled: true
            size: 8Gi
        # Allow Prometheus to discover all ServiceMonitors
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}

  # Grafana - visualization platform
  - name: grafana
    namespace: dvir-api
    chart: bitnami/grafana
    version: 9.0.1
    values:
      - admin:
          # Default password for admin user (change in production)
          password: "admin"
      # Configure Prometheus data source
      - datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Prometheus
                type: prometheus
                url: http://prometheus-server.dvir-api.svc.cluster.local
                access: proxy
                isDefault: true

  # Elasticsearch - log storage and indexing
  - name: elasticsearch
    namespace: dvir-api
    chart: elastic/elasticsearch
    version: 7.17.3
    values:
      - replicas: 1
        minimumMasterNodes: 1

  # Kibana - log visualization and exploration
  - name: kibana
    namespace: dvir-api
    chart: elastic/kibana
    version: 7.17.3
    values:
      - elasticsearchHosts: "http://elasticsearch-master:9200"

  # Filebeat - log shipper
  - name: filebeat
    namespace: dvir-api
    chart: elastic/filebeat
    version: 7.17.3
    values:
      - daemonset:
          enabled: true
        filebeatConfig:
          filebeat.yml: |
            filebeat.inputs:
            - type: container
              paths:
                - /var/log/containers/grades-api-*.log
              processors:
                - add_kubernetes_metadata:
                    host: ${NODE_NAME}
                    matchers:
                    - logs_path:
                        logs_path: "/var/log/containers/"
            output.elasticsearch:
              hosts: ["http://elasticsearch-master:9200"]
              index: "grades-api-%{+yyyy.MM.dd}"

  # Main application
  - name: grades-api
    namespace: dvir-api
    chart: stakater/application
    version: 0.1.0
    values:
      - ./helm/grades-api/values.yaml
    needs:
      - dvir-api/postgres
      - dvir-api/vault
      - dvir-api/statsd