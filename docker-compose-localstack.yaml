services:
  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: grades-api
    ports:
      - "8080:8080"
    environment:
      - LIBRA_SERVER_PORT=8080
      - LIBRA_DB_HOST=postgres
      - LIBRA_DB_PORT=5432
      - LIBRA_DB_USER=${POSTGRES_USER:-postgres}
      - LIBRA_DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - LIBRA_DB_DATABASE=${POSTGRES_DB:-gradesdb}
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_METRICS_NAMESPACE=GradesService
      - S3_BUCKET_NAME=grades-metrics
    volumes:
      - ./config:/config
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - grades-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # PostgreSQL (simulating Aurora/RDS)
  postgres:
    image: postgres:15-alpine
    container_name: grades-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-gradesdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - grades-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-gradesdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # LocalStack for AWS services simulation
  localstack:
    image: localstack/localstack:latest
    container_name: grades-localstack
    ports:
      - "4566:4566"      # LocalStack main entry point
      - "4510-4559:4510-4559"  # Dynamic port range for internal services
    environment:
      - SERVICES=s3,cloudwatch,logs,iam,eks
      - DEBUG=${DEBUG:-0}
      - DATA_DIR=/tmp/localstack/data
      - AWS_DEFAULT_REGION=us-east-1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./localstack-init:/docker-entrypoint-initaws.d
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - grades-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # Init container for AWS resources setup
  aws-init:
    image: amazon/aws-cli:latest
    container_name: grades-aws-init
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    volumes:
      - ./aws-init:/aws-init
    entrypoint: ["/bin/sh", "/aws-init/setup.sh"]
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - grades-network

# Named volumes
volumes:
  postgres_data:
    name: grades-postgres-data

# Networks
networks:
  grades-network:
    name: grades-network
    driver: bridge